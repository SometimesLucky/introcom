#include <stdio.h>
typedef struct
{
	int table[4][4];
	int issudoku;
}sudokutable;

sudokutable inputsudoku (); 
void showsudoku (sudokutable t);
int checksudoku (sudokutable p);
int solvesudoku(sudokutable m);

int main ()
{
  sudokutable st;
  int r,c,x,y,z;
  st = inputsudoku();
  printf("before solve\n");
  showsudoku(st);
  st.issudoku = checksudoku(st);
  if (st.issudoku==0)
  {
  	printf("This is not sudoku table\n");
  }
  else 
  {
  	for(r=0;r<4;r++)
  	for(c=0;c<4;c++)
  		if(st.table[r][c]==0)
		  {
		  	x=r;y=c;r=5;c=5;
		  }
		  	st.table[x][y]=solvesudoku(st);
			if(st.table[x][y]!=-1)
			{
				printf("\nSolution = %d\n",st.table[x][y]);
			}
			printf("sudoku table after solve\n");
			showsudoku(st);	
		
	
  }
  return 0;
}

sudokutable inputsudoku ()
{
	sudokutable b;
	int i,j;
	for(j=0;j<4;j++)
	{
	printf("\nrow%d : ",j);
	fflush(stdin);
	scanf("%d %d %d %d",&b.table[j][0],&b.table[j][1],&b.table[j][2],&b.table[j][3]);
	}
	return b;
}

void showsudoku (sudokutable t)
{
	int i,j;
	for(j=0;j<4;j++)
     {
             printf("\nrow%d : ",j);
	for(i=0;i<4;i++)
	{
	fflush(stdin);
	printf("%d",t.table[j][i]);
	printf(" ");
        }
            printf("\n");
    }
}

int checksudoku (sudokutable p)
{
	int i,j,k,l;
	for(i=0;i<4;i++)
	{
		for(j=0;j<4;j++)
		{
			for(k=0;k<4;k++)
			{
				if(p.table[i][j]==0)
				{}
				else if(j!=k)
				if(p.table[i][j]==p.table[i][k])
				{
					return 0;
				}
				
			}
		}
		for(j=0;j<4;j++)
		{
			for(k=0;k<4;k++)
			{
				if(p.table[j][i]==0)
				{}
				else if(j!=k)
				if(p.table[j][i]==p.table[k][i])
				{
					return 0;
				}
				
			}
		}
	}
	
	return 1;
}

int solvesudoku(sudokutable m)
{
	int i,j,k,sum=0,ans=0;
		for(i=0;i<4;i++)
	{
		for(j=0;j<4;j++)
		{
				if(m.table[i][j]==0)
				{
					for(k=0;k<4;k++)
					{
						sum+=m.table[i][k];		
					}
						i=5;
						j=5;
						k=5;	
				}
	} 
}
ans = 10-sum;
if(ans==0)
return -1;
return ans;
}
